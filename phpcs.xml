<?xml version="1.0"?>
<ruleset name="Shopping store">
    <description>
        Padrões de codificação para projetos em PHP da Shopping store.
    </description>

    <!--
        Specific Laravel Config
    -->
    <file>app</file>
    <file>database</file>
    <file>routes</file>
    <file>tests</file>

    <!--
       You can hard-code ignore patterns directly into your
       custom standard so you don't have to specify the
       patterns on the command line.
​
    -->
    <exclude-pattern>*/public/*</exclude-pattern>
    <exclude-pattern>*/*.js</exclude-pattern>
    <exclude-pattern>*/*.css</exclude-pattern>
    <exclude-pattern>*/*.xml</exclude-pattern>
    <exclude-pattern>*/*.blade.php</exclude-pattern>
    <exclude-pattern>*/autoload.php</exclude-pattern>
    <exclude-pattern>*/storage/*</exclude-pattern>
    <exclude-pattern>*/docs/*</exclude-pattern>
    <exclude-pattern>*/vendor/*</exclude-pattern>
    <exclude-pattern>*/TestCase.php</exclude-pattern>

    <arg value="-colors" />
    <arg value="s" />
    <arg value="p" />

    <rule ref="PSR12">
        <exclude name="PSR2.Methods.MethodDeclaration.Underscore" />
    </rule>

    <rule ref="Generic.Arrays.ArrayIndent" />
    <rule ref="Generic.CodeAnalysis.EmptyStatement" />
    <rule ref="Generic.CodeAnalysis.JumbledIncrementer" />
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement" />
    <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier" />
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter">
        <exclude name="Generic.CodeAnalysis.UnusedFunctionParameter.FoundInImplementedInterface" />
        <exclude name="Generic.CodeAnalysis.UnusedFunctionParameter.FoundInExtendedClass" />
        <exclude name="Generic.CodeAnalysis.UnusedFunctionParameter.Found" />
    </rule>
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod" />
    <rule ref="Generic.ControlStructures.InlineControlStructure" />
    <rule ref="Generic.Files.ByteOrderMark" />
    <rule ref="Generic.Files.LineEndings" />
    <rule ref="Generic.Files.LineLength" />
    <rule ref="Generic.Formatting.DisallowMultipleStatements" />
    <rule ref="Generic.Formatting.SpaceAfterCast" />
    <rule ref="Generic.Metrics.NestingLevel">
        <properties>
            <property name="nestingLevel" value="3" />
            <property name="absoluteNestingLevel" value="4" />
        </properties>
    </rule>
    <rule ref="Generic.NamingConventions.UpperCaseConstantName" />
    <rule ref="Generic.NamingConventions.CamelCapsFunctionName" />
    <rule ref="Generic.PHP.DeprecatedFunctions" />
    <rule ref="Generic.PHP.DisallowShortOpenTag" />
    <rule ref="Generic.PHP.ForbiddenFunctions" />
    <rule ref="Generic.PHP.LowerCaseConstant" />
    <rule ref="Generic.PHP.NoSilencedErrors" />
    <rule ref="Generic.WhiteSpace.DisallowTabIndent" />
    <rule ref="Generic.WhiteSpace.ScopeIndent">
        <properties>
            <property name="indent" value="4" />
            <property name="tabIndent" value="false" />
        </properties>
    </rule>

    <rule ref="MySource.PHP.GetRequestData" />

    <rule ref="PEAR.ControlStructures.MultiLineCondition" />
    <rule ref="PEAR.Formatting.MultiLineAssignment" />
    <rule ref="PEAR.Functions.FunctionCallSignature" />
    <rule ref="PEAR.Functions.FunctionDeclaration" />
    <rule ref="PEAR.Functions.ValidDefaultValue" />
    <rule ref="PEAR.NamingConventions.ValidClassName" />
    <rule ref="PEAR.WhiteSpace.ObjectOperatorIndent" />
    <rule ref="PEAR.WhiteSpace.ScopeClosingBrace" />
    <rule ref="PEAR.WhiteSpace.ScopeIndent" />

    <rule ref="Squiz.Commenting.FunctionComment">
        <exclude name="Squiz.Commenting.FunctionComment.EmptyThrows" />
        <exclude name="Squiz.Commenting.FunctionComment.MissingParamComment" />
        <exclude name="Squiz.Commenting.FunctionComment.TypeHintMissing" />
        <exclude name="Squiz.Commenting.FunctionComment.InvalidReturn" />
        <properties>
            <property name="skipIfInheritdoc" value="true" />
        </properties>
    </rule>
    <rule ref="Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine" />
    <rule ref="Squiz.PHP.DisallowComparisonAssignment" />
    <rule ref="Squiz.PHP.DisallowInlineIf" />
    <rule ref="Squiz.PHP.DisallowMultipleAssignments" />
    <rule ref="Squiz.PHP.DiscouragedFunctions">
        <properties>
            <property name="error" value="true" />
        </properties>
    </rule>
    <rule ref="Squiz.PHP.Eval" />
    <rule ref="Squiz.PHP.GlobalKeyword" />
    <rule ref="Squiz.PHP.Heredoc" />
    <rule ref="Squiz.PHP.InnerFunctions" />
    <rule ref="Squiz.PHP.LowercasePHPFunctions" />
    <rule ref="Squiz.PHP.NonExecutableCode" />
    <rule ref="Squiz.Scope.MemberVarScope" />
    <rule ref="Squiz.Scope.MethodScope" />
    <rule ref="Squiz.Scope.StaticThisUsage" />
    <rule ref="Squiz.WhiteSpace.CastSpacing" />
    <rule ref="Squiz.WhiteSpace.ControlStructureSpacing" />
    <rule ref="Squiz.WhiteSpace.LanguageConstructSpacing" />
    <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing" />
    <rule ref="Squiz.WhiteSpace.ObjectOperatorSpacing">
        <properties>
            <property name="ignoreNewlines" value="true" />
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.OperatorSpacing">
        <properties>
            <property name="ignoreNewlines" value="true" />
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.ScopeClosingBrace" />
    <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing" />
    <rule ref="Squiz.WhiteSpace.SemicolonSpacing" />
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace" />
    <rule ref="Zend.Files.ClosingTag" />
</ruleset>
